<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bra.modules.reserve.dao.ReserveCommoditySellDetailDao">

    <sql id="reserveCommoditySellDetailColumns">
		a.id AS "id",
        a.gift_flag AS "giftFlag",
		a.fk_reserve_member_id AS "reserveMember.id",
		a.fk_reserve_commodity_id AS "reserveCommodity.id",
		commodity.name AS "reserveCommodity.name",
		a.fk_reserve_commodity_sell_id  AS "reserveCommoditySell.id",
		a.fk_reserve_card_statements_id  AS "reserveCardStatement.id",
		s.pay_type AS "reserveCommoditySell.payType",
		a.num AS "num",
		a.price AS "price",
		a.detail_sum AS "detailSum",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

    <sql id="reserveCommoditySellDetailJoins">
		LEFT JOIN reserve_commodity as commodity ON commodity.id = a.fk_reserve_commodity_id
		LEFT JOIN reserve_member as m ON m.id = a.fk_reserve_member_id
		LEFT JOIN reserve_commodity_sell as s ON s.id = a.fk_reserve_commodity_sell_id
	</sql>

    <select id="get" resultType="ReserveCommoditySellDetail">
        SELECT
        <include refid="reserveCommoditySellDetailColumns"/>
        FROM reserve_commodity_sell_detail a
        <include refid="reserveCommoditySellDetailJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findSellDetailList" resultType="ReserveCommoditySellDetail">
        SELECT
        a.id AS "id",
        a.gift_flag AS "giftFlag",
        a.reserve_member_name AS "reserveMember.name",
        a.fk_reserve_commodity_id AS "reserveCommodity.id",
        commodity.name AS "reserveCommodity.name",
        venue.id AS "reserveCommodity.reserveVenue.id",
        venue.name AS "reserveCommodity.reserveVenue.name",
        t.name AS "reserveCommodity.commodityType.name",
        a.fk_reserve_commodity_sell_id AS "reserveCommoditySell.id",
        s.pay_type AS "reserveCommoditySell.payType",
        a.num AS "num",
        a.price AS "price",
        a.detail_sum AS "detailSum",
        a.create_by AS "createBy.id",
        a.create_date AS "createDate",
        a.update_by AS "updateBy.id",
        a.update_date AS "updateDate",
        a.remarks AS "remarks",
        a.del_flag AS "delFlag",
        u.name AS "updateBy.name"
        FROM reserve_commodity_sell_detail as a
        LEFT JOIN  reserve_user as u on u.id=a.create_by
        LEFT JOIN reserve_commodity_sell as s ON s.id = a.fk_reserve_commodity_sell_id
        ,reserve_commodity as commodity,reserve_commodity_type as t,reserve_venue as venue
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} and a.tenant_id = #{tenantId} AND
            a.fk_reserve_commodity_id=commodity.id and commodity.commodity_type_id =t.id and commodity.fk_reserve_venue_id=venue.id
            <if test="giftFlag!=null and giftFlag !=''">
                and gift_flag = #{giftFlag}
            </if>
            <if test="reserveCommodity != null">
                <if test="reserveCommodity.name !=null and reserveCommodity.name !=''">
                    and commodity.name LIKE concat('%',#{reserveCommodity.name},'%')
                </if>
                <if test="reserveCommodity.reserveVenue !=null and reserveCommodity.reserveVenue.id !=null and reserveCommodity.reserveVenue.id !=''">
                    and venue.id = #{reserveCommodity.reserveVenue.id}
                </if>
            </if>
            <if test="reserveMember != null and reserveMember.name !=null and reserveMember.name !=''">
                    and a.reserve_member_name LIKE concat('%',#{reserveMember.name},'%')
            </if>
            <if test="reserveCommoditySell != null">
                <if test="reserveCommoditySell.id !=null and reserveCommoditySell.id !=''">
                    and a.fk_reserve_commodity_sell_id = #{reserveCommoditySell.id}
                </if>
                <if test="reserveCommoditySell.payType !=null and reserveCommoditySell.payType !=''">
                    and s.pay_type = #{reserveCommoditySell.payType}
                </if>
            </if>
            <if test="reserveCommoditySell != null">
                <if test="reserveCommoditySell.id !=null and reserveCommoditySell.id !=''">
                    and a.fk_reserve_commodity_sell_id = #{reserveCommoditySell.id}
                </if>
                <if test="reserveCommoditySell.payType !=null and reserveCommoditySell.payType !=''">
                    and s.pay_type = #{reserveCommoditySell.payType}
                </if>
            </if>
            <if test="startDate!=null and endDate !=null">
                and (Date(a.create_date) between Date(#{startDate}) and Date(#{endDate}))
            </if>
            ${sqlMap.saas}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findList" resultType="ReserveCommoditySellDetail">
        SELECT
        <include refid="reserveCommoditySellDetailColumns"/>
        FROM reserve_commodity_sell_detail a
        <include refid="reserveCommoditySellDetailJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} and a.tenant_id = #{tenantId}
            <if test="reserveCommodity != null">
                <if test="reserveCommodity.name !=null and reserveCommodity.name !=''">
                    and commodity.name LIKE concat('%',#{reserveCommodity.name},'%')
                </if>
            </if>
            <if test="reserveCommoditySell != null">
                <if test="reserveCommoditySell.id !=null and reserveCommoditySell.id !=''">
                    and a.fk_reserve_commodity_sell_id = #{reserveCommoditySell.id}
                </if>
            </if>
            <if test="startDate!=null and endDate !=null">
                and (Date(a.create_date) between Date(#{startDate}) and Date(#{endDate}))
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="ReserveCommoditySellDetail">
        SELECT
        <include refid="reserveCommoditySellDetailColumns"/>
        FROM reserve_commodity_sell_detail a
        <include refid="reserveCommoditySellDetailJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} and a.tenant_id = #{tenantId}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO reserve_commodity_sell_detail(
			id,
			fk_reserve_member_id,
			reserve_member_name,
			fk_reserve_commodity_id,
			fk_reserve_commodity_sell_id,
			fk_reserve_card_statements_id,
			gift_flag,
			num,
			price,
			detail_sum,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			tenant_id
		) VALUES (
			#{id},
			#{reserveMember.id},
			#{reserveMember.name},
			#{reserveCommodity.id},
			#{reserveCommoditySell.id},
			#{reserveCardStatement.id},
			#{giftFlag},
			#{num},
			#{price},
			#{detailSum},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{tenantId}
		)
	</insert>

    <update id="update" flushCache="true">
		UPDATE reserve_commodity_sell_detail SET
		 	fk_reserve_member_id = #{reserveMember.id},
		 	reserve_member_name = #{reserveMember.name},
			fk_reserve_commodity_id = #{reserveCommodity.id},
			fk_reserve_commodity_sell_id = #{reserveCommoditySell.id},
			fk_reserve_card_statements_id = #{reserveCardStatement.id},
			gift_flag = #{giftFlag},
			num = #{num},
			price = #{price},
			detail_sum = #{detailSum},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			tenant_id = #{tenantId}
		WHERE id = #{id}
	</update>

    <update id="delete">
		UPDATE reserve_commodity_sell_detail SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>