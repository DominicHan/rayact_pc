<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bra.modules.reserve.dao.ReserveRoleDao">
    
	<sql id="reserveRoleColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		auth.authority AS "authority",
		a.user_type AS "userType",
		a.venue_json AS "venueJson",
		u2.name AS "user.name"
	</sql>
	
	<sql id="reserveRoleJoins">
		LEFT JOIN reserve_user u2 ON u2.id = a.user_id
		LEFT JOIN reserve_role_auth auth ON auth.user_type = a.user_type
	</sql>
    
	<select id="get" resultType="ReserveRole">
		SELECT 
			<include refid="reserveRoleColumns"/>
		FROM reserve_role a
		<include refid="reserveRoleJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ReserveRole">
		SELECT 
			<include refid="reserveRoleColumns"/>
		FROM reserve_role a
		<include refid="reserveRoleJoins"/>
		<where>
			<if test="user != null and user.id != null and user.id !=''">
				 a.user_id = #{user.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ReserveRole">
		SELECT 
			<include refid="reserveRoleColumns"/>
		FROM reserve_role a
		<include refid="reserveRoleJoins"/>
		<where>
			<if test="user != null and user.id != null and user.id !=''">
				 a.user_id = #{user.id}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO reserve_role(
			id,
			user_id,
			authority,
			user_type,
			venue_json
		) VALUES (
			#{id},
			#{user.id},
			#{authority},
			#{userType},
			#{venueJson}
		)
	</insert>
	
	<update id="update">
		UPDATE reserve_role SET 	
			user_id = #{user.id},
			authority = #{authority},
			user_type = #{userType},
			venue_json = #{venueJson}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM reserve_role
		WHERE id = #{id}
	</update>
	
</mapper>